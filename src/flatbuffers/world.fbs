namespace flatbuffers;

struct Vec3 {
	x: float;
	y: float;			 
	z: float;			 
}

struct Vec4 {
	x: float;
	y: float;			 
	z: float;
	w: float;
}

struct Mat4 {
	r1: Vec4;
	r2: Vec4;
	r3: Vec4;
	r4: Vec4;
}

struct Transform {
	scale: Vec3;
	rotate: Vec4;
	translate: Vec3;
}

struct Sphere {
	radius: float;
}

struct Box {
	extents: Vec3;
}

struct Capsule {
	radius: float;
	height: float;
}

union CollisionShape {
	Sphere, Box, Capsule
}

table Player {
	modelIndex: uint;
	transform: Transform;
}

table StaticObject {
	id: string;
	modelIndex: uint;
	transform: Transform;
}

table DynamicObject {
	id: string;
	modelIndex: uint;
	transform: Transform;
	mass: float;
}

table Terrain {
	file: string;
}

table Skybox {
	file: string;
}

table Model {
	file: string;
	transform: Transform;
	collisionShape: CollisionShape;
}

table World {
	cameraPosition: Vec3;
	cameraView: Vec3;
	sunLightDir : Vec3;
	sunLightColor : Vec3;
	models: [Model];
	// player: Player;
	// staticObjects: [StaticObject];
	// dynamicObjects: [DynamicObject];
	// terrains: [Terrain];
	// skyboxes: [Skybox];
}

root_type World;

file_extension "gpk";